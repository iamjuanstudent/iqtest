/*
	An HTML output writer for iqtest

	Uses options on the TestGroup:
	groupTemplate: {name} = group name
	testTemplate: {name} = test name, {desc} = simple failure description
	itemTemplate: {fulltext} 

	This should append itself to iqtest.writers.xxx

*/
(function(e){var n=e.impl.utility,h={group:'<pre><h1>Starting test group "<span class="test-name"></span>": <span class="test-groupstatus"></span></h1><div><div></div></div></pre>',testStart:'<h2>Starting test "<span class="test-name"></span>": <span class="test-teststatus"></span></h2><div></div>',testEnd:'<h3><span class="test-count"></span> assertions passed.</h3>',itemStart:'<span style="color: blue;font-style: italic;">#<span class="test-number"></span>: <span class="test-assertion"></span> "<span class="test-message"></span>"....</span><br/>',itemEnd:'<span class="test-failmessage"></span><br/>',log:'<span style="color:purple"><span class="test-logmessage"></span><br/>',resultSuccess:'<span style="color:green"></span>',resultFail:'<span style="color:red"></span>',showPassed:false};
function m(o,p){var s,r,q;for(q in p){if(p.hasOwnProperty(q)){s=".test-"+q.toLowerCase();
r=$(s,o);if(!r.length){r=$(o).filter(s);}r.empty().append(p[q]);}}return o;}function a(o){var p=o?h.resultSuccess:h.resultFail;
return $(p).text(o?"Passed":"Failed");}function c(o){var p=m($(h.group).clone(),{name:o.name,groupstatus:"Running"});
this.container.append(p);this.groupWrapper=p;this.groupContainer=p.find("div:only-child:last");
}function b(o){m(this.groupWrapper,{groupstatus:a(o.passed)});}function l(p){var q=this.getTestData(p.id),o=m($(h.testStart).clone(),{name:p.name,teststatus:"Running"});
q.testWrapper=o;q.testContainer=o.filter("div");this.groupContainer.append(o);}function j(p){var q=this.getTestData(p.id),o=m($(h.testEnd).clone(),{count:p.count});
q.testContainer.append(o);m(q.testWrapper,{teststatus:a(p.passed)});}function g(p,r){var q=this.getTestData(p.id),o=m($(h.itemStart).clone(),{number:r.count,assertion:r.assertion,message:r.desc});
q.itemTarget=o;q.testContainer.append(o);}function f(p,o){var q=this.getTestData(p.id);
if(o.passed){if(!h.showPassed){q.itemTarget.remove();}}else{q.itemTarget.replaceWith(m($(h.itemEnd).clone(),{failmessage:o.fulltext}));
}q.itemTarget=null;o.written=true;}function k(p,o){var q=this.getTestData(p.id);q.testContainer.append(m($(h.log).clone(),{logmessage:o}));
}function i(o){return function(){var q;try{o.apply(this,n.toArray(arguments));}catch(p){when.debug=true;
throw q;}};}function d(o,p){this.owner=null;this.container=o;this.tests={};if(typeof p==="object"){$.extend(h,p);
}}d.prototype={constructor:d,groupStart:i(c),groupEnd:i(b),testStart:i(l),testEnd:i(j),itemStart:i(g),itemEnd:i(f),testLog:i(k),getTestData:function(o){if(!this.tests[o]){this.tests[o]={};
}return this.tests[o];}};e.writers.html=d;}(iqtest));