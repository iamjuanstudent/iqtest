/*
	A harness for iqtest

	Uses options on the TestGroup:
	groupTemplate: {name} = group name
	testTemplate: {name} = test name, {desc} = simple failure description
	itemTemplate: {fulltext} 

	This should append itself to iqtest.writers.xxx

*/
(function(e){var l={group:'<pre><h1>Starting test group "<span class="test-name"></span>": <span class="test-groupstatus"></span></h1><div><div></div></div></pre>',testStart:'<h2>Starting test "<span class="test-name"></span>": <span class="test-teststatus"></span></h2><div></div>',testEnd:'<h3><span class="test-count"></span> assertions passed.</h3>',itemStart:'<span style="color: blue;font-style: italic;">#<span class="test-number"></span>: <span class="test-assertion"></span> "<span class="test-message"></span>"....</span><br/>',itemEnd:'<span class="test-failmessage"></span><br/>',log:'<span style="color:purple"><span class="test-logmessage"></span><br/>',resultSuccess:'<span style="color:green"></span>',resultFail:'<span style="color:red"></span>'};
function k(m,n){var p,o;for(o in n){if(n.hasOwnProperty(o)){p=m.find(".test-"+o.toLowerCase());
p.empty().append(n[o]);}}return m;}function a(m){var n=m?l.resultSuccess:l.resultFail;
return $(n).text(m?"Passed":"Failed");}function c(m){var n=k($(l.group).clone(),{name:m.name,groupstatus:"Running"});
this.container.append(n);this.groupWrapper=n;this.groupContainer=n.find("div:only-child:last");
}function b(m){k(this.groupWrapper,{groupstatus:a(m.passed)});}function j(n){var o=this.getTestData(n.id),m=k($(l.testStart).clone(),{name:n.name,teststatus:"Running"});
o.testWrapper=m;o.testContainer=m.filter("div");this.groupContainer.append(m);}function h(n){var o=this.getTestData(n.id),m=k($(l.testEnd).clone(),{count:n.count});
o.testContainer.append(m);k(o.testWrapper,{teststatus:a(n.passed)});}function g(n,p){var o=this.getTestData(n.id),m=k($(l.itemStart),{assertion:p.assertion,message:p.desc});
o.itemTarget=m;o.testContainer.append(m);}function f(n,m){var o=this.getTestData(n.id);
if(m.passed){if(!this.owner.showPassed){o.itemTarget.remove();}}else{o.itemTarget.replaceWith(k($(l.itemEnd).clone(),{failmessage:m.fulltext}));
}o.itemTarget=null;m.written=true;}function i(n,m){var o=this.getTestData(n.id);o.testContainer.append(k($(l.log).clone(),{logmessage:m}));
}function d(m){this.owner=null;this.container=m;this.tests={};}d.prototype={constructor:d,groupStart:c,groupEnd:b,testStart:j,testEnd:h,itemStart:g,itemEnd:f,testLog:i,getTestData:function(m){if(!this.tests[m]){this.tests[m]={};
}return this.tests[m];}};e.writers.html=d;}(iqtest));