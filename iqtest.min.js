/*
IqTest: A javascript testing framework that promises to be easy

(c) 2012 James Treworgy
MIT License
*/

var iqtest=(function(b){var j,f,e,g,i,c,d={name:"Unnamed Test Group",groupStart:null,groupEnd:null,testStart:null,testEnd:null,itemStart:null,itemEnd:null},h={name:"",desc:"Unnamed Test",func:null};
j={extend:function(s){var p,q,r,k,n=arguments.length,l=typeof arguments[n-1]==="boolean",m=l?n-2:n-1,o=l?arguments[m+1]:false;
r=j.toArray(arguments,1,m+1);for(k=0;k<r.length;k++){q=r[k];for(p in q){if(q.hasOwnProperty(p)&&(!o||s.hasOwnProperty(p))){s[p]=q[p];
}}}return s;},toArray:function(k,l,m){return Array.prototype.slice.call(k,l||0,m);
},isArray:function(k){return k&&k.constructor==Array;},isFunction:function(k){return typeof k==="function";
},format:function(l){var k=(arguments.length===2&&this.isArray(arguments[1]))?arguments[1]:this.toArray(arguments,1);
return l.replace(/\{(\d+)\}/g,function(m,n){return typeof k[n]!=="undefined"?String(k[n]):m;
});},each:function(l,k){var m;if(this.isArray(l)){for(m=0;m<l.length;m++){if(k.call(l[m],m,l[m])===false){break;
}}}else{for(m in l){if(l.hasOwnProperty(m)){if(k.call(l[m],m,l[m])===false){break;
}}}}},isDTest:function(k){return k&&typeof k.startDTest==="function";},newChain:function(k){window.setTimeout(k,50);
},event:function(k,m,l){if(j.isFunction(k)){k.call(m,l);}}};f={pass:function(k){return{desc:k};
},fail:function(k,l){return{actual:k||"[the test was aborted]",desc:l};},isTrue:function(k,l){return{actual:k,desc:l};
},areEqual:function(m,k,l){return{expected:m,actual:k,desc:l};}};j.extend(f,{isFalse:f.isTrue,isTruthy:f.isTrue,isFalsy:f.isTrue,areNotEqual:this.areEqual});
i=function(k){this.tests=[];j.extend(this,d);j.extend(this,k,true);this.promise=when.defer();
this.passed=true;};i.prototype={constructor:i,test:function(q,k,m){var r,o,l,p=this,n=!!m,s={name:q,desc:n?k:"",func:n?m:k};
r=new g(s);r.group=p;if(p.tests.length===0){j.event(p.groupStart,p,p);}p.tests.push(r);
j.event(p.testStart,p,r);r.func(r.assert);o=r.promise;l=function(){if(r.promise!==o){o=r.promise;
o.then(l,l);return;}r.passed=(r.count===r.countPassed);if(!r.passed){p.passed=false;
}j.event(p.testEnd,p,r);if(r===p.tests[p.tests.length-1]){j.event(p.groupEnd,p,p);
}};r.promise.then(l,l);return p;},then:function(m,k){if(j.isFunction(m)){this.promise=this.promise.then.apply(this.promise,j.toArray(arguments));
return this;}else{var l=new i(this);this.promise=this.promise.then(function(){l.test(m,k);
return l;},function(){alert("debug: failback called on a group");});return l;}},end:function(){this.promise.then(function(){j.event(this.groupEnd,this,this);
},function(k){alert('debug: group "end" resolved with fail');});},run:function(n){var o,k,l,m=this;
j.each(m.tests,function(q,r){var p;if(!n||r.name===n){r.func(r.assert);if(l){if(q===m.tests.length-1){p=function(){var s=false;
j.each(m.tests,function(t,u){if(!u.passed){s=true;return false;}});m.passed=!s;j.event(m.groupEnd,m,m);
};}l.lastPromise.then(function(){j.newChain(function(){var s=r.run();if(p){s.then(p);
}});});}if(!k){k=r;}l=r;}});if(k){o=k.run();}else{o=when.defer();o.resolve(this);
}return o;}};g=function(l){var k=this;j.extend(k,h);j.extend(k,l,true);j.extend(k,{promise:when.defer(),results:[],count:0,countPassed:0,countFailed:0,group:null,assert:new c(k)});
k.promise.resolve();};function a(k,l,m){return{err:l===true?"":j.format('value "{0}" is not {1}',k.actual,m),desc:k.desc};
}g.prototype={constructor:g,assert:{},impl:{pass:function(k){return{desc:k.desc};
},fail:function(k){return{err:k.actual,desc:k.desc};},isTrue:function(k){return a(k,k.actual===true,"true");
},isFalse:function(k){return a(k,k.actual===false,"false");},isTruthy:function(k){return a(k,!!k.actual,"truthy");
},isFalsy:function(k){return a(k,!!k.actual,"falsy");},areEqual:function(k){var l;
if(typeof k.actual!=typeof k.expected){l=j.format('test case type "{0}" !== expected type "{1}"',typeof k.actual,typeof k.expected);
}if(!l&&k.actual!=k.expected){l=j.format('value "{0}" !== expected value "{1}"',k.actual,k.expected);
}return{err:l,desc:k.desc};},areNotEqual:function(k){var l=this.areEqual(k.expected,k.actual,k.desc);
if(!l.err){l.err=j.format('Value "{0}" === expected value "{1}"',k.actual,k.expected);
}return l;}},chain:function(k){if(when.isPromise(k)){this.promise=when.all([this.promise,k]);
}else{this.promise=this.promise.then(k,function(l){alert(j.format("debug: chained promise failed '{0}'",l));
});}return this.promise;},then:function(){return this.promise.then.apply(this.promise,j.toArray(arguments));
},startTest:function(l){var k=j.extend({},l.assertArgs);this.count++;j.extend(k,{count:this.count});
j.event(this.group.itemStart,this.group,k);},endTest:function(m){var l=!m.err,k=j.extend(m,{passed:l});
if(!l){k=this.addResult(m);this.countFailed++;}else{this.countPassed++;}j.event(this.group.itemEnd,this.group,k);
},runTest:function(l,k){var m;m=this.impl[l].call(this,k);m.assertFuncName=l;this.endTest(m);
return m.passed;},addResult:function(m){var l=j.extend({},m),k=l.passed?"passed":"failed";
l.count=this.count;l.fulltext=j.format("Test #{0} [{1}] {2}{3}{4}",this.count,m.assertFuncName,k,l.passed?"":": "+m.err,m.desc?j.format(' in test "{0}"',m.desc):"");
this.results.push(l);return l;},runTestNow:function(n,l){var p=this,s,o,r,k=false,q=[],m=f[n].apply(p,l);
o=function(t){p.impl.fail({desc:m.desc,err:t});};r=function(t){m.actual=t;};s=function(){p.startTest({assertArgs:m,assertFuncName:n});
return p.runTest.call(p,n,m);};k=when.isPromise(m.actual);if(p.assert.promise){if(k){return o("The actual value passed is a promise, but a callback has also been initiated");
}p.assert.promise.then(r,o);q.push(p.assert.promise);p.assert.promise=null;}if(k){m.actual.then(r,o);
q.push(m.actual);}if(q.length){q.push(p.promise);p.chain(when.all(q));}p.chain(s);
return p.assert;},defer:function(k){return this._defer({func:k,args:j.toArray(arguments,1)});
},cback:function(l,k){return this._defer({func:l,callback:k});},_defer:function(k){var m=this,l=function(n){this.func=n.func;
this.args=n.args;this.callback=n.callback;this.promise=when.defer();this.assertFuncName=null;
this.assertArgs=null;this.testObj=m;};l.prototype.startDTest=function(){var o=this,p;
o.testObj.startTest(o);try{if(!j.isFunction(o.func)){p=when.defer();p.resolve(o.func);
}else{if(o.callback){p=when.defer();this.func.call(null,function(){p.resolve(o.callback.apply(this,j.toArray(arguments)));
});}else{p=this.func.apply(null,this.args);}}}catch(n){o.assertFuncName="fail";p=when.defer();
p.resolve(j.format('an uncaught error occurred: "{0}"',n.toString()));}return p.then(function(r){try{o.assertArgs.actual=r;
o.testObj.runTest.call(o.testObj,o.assertFuncName,o.assertArgs);}catch(q){o.testObj.results.push({passed:false,desc:o.assertArgs.desc,err:q.toString()});
}finally{o.promise.resolve();}},function(q){try{o.testObj.assert.impl.fail(o.desc,q);
}catch(r){o.testObj.results.push({passed:false,desc:o.assertArgs.desc,err:j.format("Failure trying to log a failed test: {0}",r.toString())});
}finally{o.promise.resolve();}});};return new l(k);},run:function(){var l=this,k=when.defer();
l.lastPromise.then(function(){l.passed=(l.count===l.countPassed);j.event(l.group.testEnd,l.group,l);
k.resolve(l);});j.event(l.group.testStart,l.group,l);l.domino();return k;}};c=function(k){this.test=k;
};c.prototype={constructor:c,then:function(){return this.test.then.apply(this.test,j.toArray(arguments));
},callback:function(n,m){var l=this,k=when.defer();l.promise=when_timeout(k,m?m*1000:10000);
return function(){var o=!n?true:n.apply(l,j.toArray(arguments));k.resolve(o);};},defer:function(){return this.test.defer.apply(this.test,j.toArray(arguments));
},cback:function(l,k){return this.test.cback.call(this.test,l,k);}};j.each(g.prototype.impl,function(l,k){c.prototype[l]=function(m){return this.test.runTestNow(l,j.toArray(arguments));
};});e={item:function(k){return new g(k);},test:function(){var k=new i(this);return k.test.apply(k,j.toArray(arguments));
},impl:{apiroot:b,TestGroup:i,Test:g,Assert:c,utility:j,groupDefaults:d}};j.extend(b,e);
return e;}(window));